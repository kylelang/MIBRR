\name{postPredict}
\alias{postPredict}
\title{
Generate Posterior Predictions from MIBRR Models
}
\description{
  This function will generate posterior predictive draws form models fit
  using \code{miben}, \code{mibl}, \code{ben}, or \code{bl}.
}
\usage{
postPredict(mibrrFit,
            newData,
            targetVars = NULL,
            nDraws     = 0,
            scale      = TRUE)
}
\arguments{
  \item{mibrrFit}{
    A fitted model object (with class \code{MibrrFit}) returned by
    \code{miben}, \code{mibl}, \code{ben}, or \code{bl}.  
  }
  \item{newData}{
    A data.frame containing new predictor data from which to generate the
    posterior predictions.   
  }
  \item{targetVars}{
    An optional character vector giving the column labels for the outcome
    variables for which to generate posterior predictions. When \code{targetVar
      = NULL} predictions are generated for all target variables contained in
    \code{mibrrFit}.
  }
  \item{nDraws}{
    The number of posterior predictive draws to return. If \code{nDraws
      = N > 0} the draws are returned in an N-column matrix where each
    column contains the posterior predictions generated by a random
    sample of model parameters. If \code{nDraws = 0} predictions are
    generated using the posterior modes (i.e., MAP scores) of the model
    paramters. If \code{nDraws < 0} predictions are generated using the
    posterior means (i.e., EAP scores) of the model parameters.\cr
    Defaults to \code{nDraws = 0}.
  }
  \item{scale}{
    A logical switch. Should the columns of \code{newData} be
    standardized before generating predictions.
  }
}
\value{
  A list containing the posterior predictive draws for each target variable
  defined in \code{targetVar} or for all target variables in \code{mibrrFit} when
  \code{targetVar = NULL}.
}
\note{
  The column names of \code{newData} must contain the column names of
  all variables used to estimate the model represented by \code{mibrrFit}.
}
\references{
  Lang, K. M. (2015) \emph{MIBEN: Multiple imputation with the
    Bayesian elastic net} (Unpublished doctoral dissertation). University of
  Kansas.
}
\author{
  Kyle M. Lang
}
\section{Warning}{
  This function is in a highly unstable \emph{alpha} level of development. Please
  anticipate frequent---and dramatic---changes to the functionality and user
  interface.
  
  You have been granted access to this package for evaluation purposes, only. This
  function is \strong{absolutely not} ready for use in real-world analyses!
}
\seealso{
\code{\link{miben}}, \code{\link{mibl}}, \code{\link{ben}}, \code{\link{bl}}
}
\examples{
data(predictData)

## Fit a Bayesian elastic net model:
benOut <- ben(data       = predictData$train,
              y          = "agree",
              X          = setdiff(colnames(predictData$train), "agree"),
              iterations = c(30, 10)
              )

## Generate 10 posterior predictions for 'y':
benPred <- postPredict(mibrrFit = benOut,
                       newData  = predictData$test,
                       nDraws   = 10)

## Generate posterior predictions for 'y' using MAP scores (the default):
benPred <- postPredict(mibrrFit = benOut,
                       newData  = predictData$test,
                       nDraws   = 0)

## Generate posterior predictions for 'y' using EAP scores:
benPred <- postPredict(mibrrFit = benOut,
                       newData  = predictData$test,
                       nDraws   = -1)

## Fit chained Bayesian elastic net models to support MI:
mibenOut <- miben(data = predictData$incomplete, iterations = c(30, 10))

## Generate posterior predictions from elementary imputation models:
mibenPred <- postPredict(mibrrFit = mibenOut, newData = predictData$test)
}